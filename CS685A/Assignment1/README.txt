This is the manual for running the code which is solution to Assignment 1

The directory structure is as given below:

.
├── assign1.sh
├── Assignment1.pdf
├── case-generator.sh
├── complete-vaccination-generator.sh
├── covid_files
│   ├── cowin_vaccine_data_districtwise.csv
│   ├── DDW_PCA0000_2011_Indiastatedist_updated.xlsx
│   ├── districts.xlsx
│   └── neighbor-districts.json
├── edge-generator.sh
├── intermediate_files
│   ├── 3-4-daily_cases_df.csv
│   ├── 3-4-month_df.csv
│   ├── 5-9-state-dose1.csv
│   ├── census-rename.csv
│   ├── City-renaming.csv
│   └── districts-modified.csv
├── neighbor-districts-modified.sh
├── outputs
│   ├── cases-month.csv
│   ├── cases-overall.csv
│   ├── cases-week.csv
│   ├── complete-vaccination.csv
│   ├── edge-graph.csv
│   ├── neighbor-districts-modified.json
│   ├── peaks-district.csv
│   ├── peaks-overall.csv
│   ├── peaks-state.csv
│   ├── vaccinated-count-district-month.csv
│   ├── vaccinated-count-district-overall.csv
│   ├── vaccinated-count-district-week.csv
│   ├── vaccinated-count-state-month.csv
│   ├── vaccinated-count-state-overall.csv
│   ├── vaccinated-count-state-week.csv
│   ├── vaccinated-dose-ratio-district.csv
│   ├── vaccinated-dose-ratio-overall.csv
│   ├── vaccinated-dose-ratio-state.csv
│   ├── vaccination-population-ratio-country.csv
│   ├── vaccination-population-ratio-district.csv
│   ├── vaccination-population-ratio-state.csv
│   ├── vaccine-type-ratio-district.csv
│   ├── vaccine-type-ratio-overall.csv
│   └── vaccine-type-ratio-state.csv
├── peaks-generator.sh
├── python_scripts
│   ├── q1.py
│   ├── q2.py
│   ├── q3.py
│   ├── q4.py
│   ├── q5.py
│   ├── q6.py
│   ├── q7.py
│   ├── q8.py
│   └── q9.py
├── README.txt
├── vaccinated-count-generator.sh
├── vaccinated-ratio-generator.sh
├── vaccination-population-ratio-generator.sh
└── vaccine-type-ratio-generator.sh


Breaking the entire directory into the following parts:

1. INPUT_DIRECTORY = covid_files
    - This directory contains the data_files downloaded from the covid portal and is used as single source of data collection

├── covid_files
   ├── cowin_vaccine_data_districtwise.csv
   ├── DDW_PCA0000_2011_Indiastatedist_updated.xlsx
   ├── districts.xlsx
   └── neighbor-districts.json

2. INTERMEDIATE_DIRECTORY = intermediate_files
    - This directory contains files that are generated in between execution for assisting in other part of assignment
    - City-renaming.csv & census-rename.csv should not be deleted

├── intermediate_files
   ├── 3-4-daily_cases_df.csv
   ├── 3-4-month_df.csv
   ├── 5-9-state-dose1.csv
   ├── census-rename.csv
   ├── City-renaming.csv
   └── districts-modified.csv

3. OUTPUT_DIRECTORY = outputs
    - This directory contains the output generated by each question

├── outputs
   ├── cases-month.csv
   ├── cases-overall.csv
   ├── cases-week.csv
   ├── complete-vaccination.csv
   ├── edge-graph.csv
   ├── neighbor-districts-modified.json
   ├── peaks-district.csv
   ├── peaks-overall.csv
   ├── peaks-state.csv
   ├── vaccinated-count-district-month.csv
   ├── vaccinated-count-district-overall.csv
   ├── vaccinated-count-district-week.csv
   ├── vaccinated-count-state-month.csv
   ├── vaccinated-count-state-overall.csv
   ├── vaccinated-count-state-week.csv
   ├── vaccinated-dose-ratio-district.csv
   ├── vaccinated-dose-ratio-overall.csv
   ├── vaccinated-dose-ratio-state.csv
   ├── vaccination-population-ratio-country.csv
   ├── vaccination-population-ratio-district.csv
   ├── vaccination-population-ratio-state.csv
   ├── vaccine-type-ratio-district.csv
   ├── vaccine-type-ratio-overall.csv
   └── vaccine-type-ratio-state.csv

4. PYTHON_SCRIPTS = python_scripts
    - This directory contains the python scripts for each individual assignment question

├── python_scripts
   ├── q1.py
   ├── q2.py
   ├── q3.py
   ├── q4.py
   ├── q5.py
   ├── q6.py
   ├── q7.py
   ├── q8.py
   └── q9.py

5. BASH SCRIPTS
    - This is the list of all the bash scripts in the top-level directory needed to run each assignment question. This has the top-level script assign1.sh that runs the entire assignment
.
├── assign1.sh
├── case-generator.sh
├── complete-vaccination-generator.sh
├── edge-generator.sh
├── neighbor-districts-modified.sh
├── peaks-generator.sh
├── vaccinated-count-generator.sh
├── vaccinated-ratio-generator.sh
├── vaccination-population-ratio-generator.sh
└── vaccine-type-ratio-generator.sh

### Question wise instructions ###

Before running any script:
    
    - Delete all outputs
        => rm outputs/*
    
    - Delete 4 intermediate_files
        => rm intermediate_files/3-4-daily_cases_df.csv
        => rm intermediate_files/3-4-month_df.csv
        => rm intermediate_files/district-modified.csv
        => rm intermediate_files/5-9-state-dose1.csv

1. Question 1

    The script for running this is: neighbor-districts-modified.sh
    ==> ./neighbor-districts-modified.sh

    It generates 1 intermediate file:
    .
    ├── intermediate_files
        └── districts-modified.csv

    It generates 1 output: 
    .
    ├── outputs
       ├──neighbor-districts-modified.json

2. Question 2

    The script for running this is: edge-generator.sh
    ==> ./edge-generator.sh

    It generates 1 output: 
    .
    ├── outputs
       ├──edge-graph.csv

3. Question 3

    The script for running this is: case-generator.sh
    ==> ./case-generator.sh

    Uses intermediate file generated by Question 1:
    .
    ├── intermediate_files
        └── districts-modified.csv

    It generates 2 intermediate files:
    .
    ├── intermediate_files
       ├── 3-4-daily_cases_df.csv
       ├── 3-4-month_df.csv

    It generates 3 outputs: each for week, month and overall:
    .
    ├── outputs
       ├── cases-month.csv
       ├── cases-overall.csv
       ├── cases-week.csv

4. Question 4

    The script for running this is: peaks-generator.sh
    ==> ./peaks-generator.sh

    Uses intermediate file generated by Question 3:
    .
    ├── intermediate_files
       ├── 3-4-daily_cases_df.csv
       ├── 3-4-month_df.csv

    It generates 3 outputs: each for district, state and overall:
    .
    ├── outputs
       ├── peaks-district.csv
       ├── peaks-overall.csv
       ├── peaks-state.csv

5. Question 5

    The script for running this is: vaccinated-count-generator.sh
    ==> ./vaccinated-count-generator.sh

    It generates 1 intermediate file:
    .
    ├── intermediate_files
        ├── 5-9-state-dose1.csv

    It generates 6 outputs: each for district, state and overall, each for week and month :
    .
    ├── outputs
       ├── vaccinated-count-district-month.csv
       ├── vaccinated-count-district-overall.csv
       ├── vaccinated-count-district-week.csv
       ├── vaccinated-count-state-month.csv
       ├── vaccinated-count-state-overall.csv
       ├── vaccinated-count-state-week.csv

6. Question 6

    The script for running this is: vaccination-population-ratio-generator.sh
    ==> ./vaccination-population-ratio-generator.sh

    It generates 3 outputs: each for district, state and overall:
    .
    ├── outputs
       ├── vaccination-population-ratio-country.csv
       ├── vaccination-population-ratio-district.csv
       ├── vaccination-population-ratio-state.csv

7. Question 7

    The script for running this is: vaccine-type-ratio-generator.sh
    ==> ./vaccine-type-ratio-generator.sh

    It generates 3 outputs: each for district, state and overall:
    .
    ├── outputs
       ├── vaccine-type-ratio-district.csv
       ├── vaccine-type-ratio-overall.csv
       └── vaccine-type-ratio-state.csv

8. Question 8

    The script for running this is: vaccinated-ratio-generator.sh
    ==> ./vaccinated-ratio-generator.sh

    It generates 3 outputs: each for district, state and overall:
    .
    ├── outputs
       ├── vaccinated-dose-ratio-district.csv
       ├── vaccinated-dose-ratio-overall.csv
       ├── vaccinated-dose-ratio-state.csv

9. Question 9

    The script for running this is: complete-vaccination.sh
    ==> ./complete-vaccination.sh

    Uses intermediate file generated by Question 1:
    .
    ├── intermediate_files
        └── districts-modified.csv

    It generates 1 outputs:
    .
    ├── outputs
       ├── 5-9-state-dose1.csv


### Top-Level Script ###

For running the entire assignment:
    
    - Delete all outputs
        => rm outputs/*
    
    - Delete 4 intermediate_files
        => rm intermediate_files/3-4-daily_cases_df.csv
        => rm intermediate_files/3-4-month_df.csv
        => rm intermediate_files/district-modified.csv
        => rm intermediate_files/5-9-state-dose1.csv

    - Run top-level script assign1.sh
        => ./assign1.sh